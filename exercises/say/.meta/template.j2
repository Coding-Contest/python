{%- import "generator_macros.j2" as macros with context -%}
{{ macros.header() }}

class {{ exercise | camel_case }}Test(unittest.TestCase):
    {% for case in cases -%}
    def test_{{ case["description"] | to_snake }}(self):
        {% if "number" in case["description"] %}
        with self.assertRaisesWithMessage(ValueError):
            {{ case["property"] | to_snake }}({{ case["input"]["number"] }})
        {% else %}
        {%- set expected = case["expected"] %}

        self.assertEqual({{ case["property"] | to_snake }}({{ case["input"]["number"] }}), {{ expected }})
        {% endif %}
    {% endfor %}

{{ macros.footer(has_error_case) }}