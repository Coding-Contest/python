{%- import "generator_macros.j2" as macros with context -%}
{{ macros.header() }}

class {{ exercise | camel_case }}Test(unittest.TestCase):
    {% for case in cases -%}
    def test_{{ case["description"] | to_snake }}(self):
        value = "{{ case["input"]["question"] }}"
        {%- if case is error_case %}
        with self.assertRaisesWithMessage(ValueError):
            {{ case["property"] }}(value)
        {%- else %}
        expected = {{ case["expected"] }}
        self.assertEqual({{ case["property"] }}(value), expected)
        {%- endif %}

    {% endfor %}

    {{ macros.utility() }}

{{ macros.footer() }}