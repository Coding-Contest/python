{%- import "generator_macros.j2" as macros with context -%}
{% set class = exercise | camel_case -%}
{{ macros.header([class]) }}

class {{ class }}Test(unittest.TestCase):
    {% for case in cases[0]["cases"] -%}
    def test_{{ case["description"] | to_snake }}(self):
        {% if "error" in case["expected"] -%}
        with self.assertRaisesWithMessage(ValueError):
            {{ class }}("{{ case["input"]["phrase"] }}")
        {% else -%}
        number = {{ class }}("{{ case["input"]["phrase"] }}").number
        self.assertEqual(number, "{{ case["expected"] }}")
        {% endif %}
    {% endfor %}

    # Track specific tests
    def test_area_code(self):
        number = {{ class }}("2234567890")
        self.assertEqual(number.area_code, "223")

    def test_pretty_print(self):
        number = {{ class }}("2234567890")
        self.assertEqual(number.pretty(), "(223) 456-7890")

    def test_pretty_print_with_full_us_phone_number(self):
        number = {{ class }}("12234567890")
        self.assertEqual(number.pretty(), "(223) 456-7890")

{{ macros.footer() }}
