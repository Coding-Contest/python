{%- import "generator_macros.j2" as macros with context -%}
{% macro test_case(case) -%}
    {%- set input = case["input"] -%}
    def test_{{ case["description"] | to_snake }}(self):
        results = {{ input["basket"] }}
        table = {{ case["expected"] }}
        self.assertEqual({{ case["property"] }}(results), table)
{%- endmacro %}
{{ macros.header() }}

class {{ exercise | camel_case }}Test(unittest.TestCase):
    {% for casegroup in cases %}
    {% for case in casegroup["cases"] -%}
    {{ test_case(case) }}
    {% endfor %}
    {% endfor %}

    {% if additional_cases | length -%}

    # Additional tests for this track

    {% for case in additional_cases -%}
    {{ test_case(case) }}
    {% endfor %}
    {%- endif %}

{{ macros.footer() }}
