#!/usr/bin/env python3.7
import io
import tarfile
import platform
import requests
import sys


def download_and_extract(url):
    resp = requests.get(url)
    print('extracting...')
    file = tarfile.open(fileobj=io.BytesIO(resp.content), mode='r:gz')
    file.extractall(path='bin/')


def parse_arch(arch):
    if '64' in arch:
        return '64bit'
    elif '686' in arch or '386' in arch:
        return '32bit'
    return '64bit'


def fetch_configlet():
    os, *_, arch = platform.uname()
    arch = parse_arch(arch)
    latest = "https://api.github.com/repos/exercism/configlet/releases/latest"
    resp = requests.get(latest)
    data = resp.json()
    version = data["tag_name"]
    name = f"configlet-{os.lower()}-{arch}.tgz"
    for asset in data["assets"]:
        print("{name}".format(**asset))
        if asset["name"] == name:
            print(f"Downloading configlet {version} for {os}-{arch}")
            download_and_extract(asset["browser_download_url"])
            return 0
    return 1


if __name__ == "__main__":
    sys.exit(fetch_configlet())
